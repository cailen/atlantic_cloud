- hosts: snorby
  vars:
       - pfsense_password: PfSensePassword1984 #hoping this will be generated in the above script
       - pfsense_ip: 172.16.1.1 #testing 
  tasks:
   
  - name: Snorby - Add EPEL repository
    yum_repository:
        name: epel
        description: EPEL YUM repo
        baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
    when: 
        - ansible_distribution_major_version == "7"
        - ansible_os_family == "RedHat"
        - ansible_pkg_mgr == "yum"
        - ansible_distribution == "CentOS"
  - name: Snorby - Install CentOS Release SCL repositories
    yum:
        name=centos-release-scl
        state=latest
        disable_gpg_check=yes

  - name: Snorby - Install yum packages
    yum:
        name={{item}}
        state=present
        disable_gpg_check=yes
        #enablerepo=centos-sclo-rh,centos-sclo-sclo
    with_items:
        - wkhtmltopdf
        - "@Development tools"
        - libyaml
      #  - rh-ruby22
      #  - rh-ruby22-ruby-devel
        - ruby
        - ruby-devel
        - ImageMagick
        - git
        - mariadb
        - mariadb-server
        - MySQL-python
        - httpd-devel
        - java-1.6.0-openjdk-devel 
        - java-1.6.0-openjdk
        - apr-devel
        - apr-util-devel
        - zlib-devel
        - mysql-devel
    when: 
        - ansible_distribution_major_version == "7"
        - ansible_os_family == "RedHat"
        - ansible_pkg_mgr == "yum"
        - ansible_distribution == "CentOS"
  - name: Snorby - Update system (yum update)
    yum:
        name='*'
        state="latest"
        disable_gpg_check=yes
  
  - name: Snorby - Start and Enable MariaDB 
    service:
        name: mariadb
        state: started
        enabled: yes
  # create a mysql user with a random password:
  - name: Snorby - Update MySQL root password for all root accounts
    mysql_user:
        name=root 
        host={{ item }} 
        password="{{ lookup('password', 'credentials/' + ansible_hostname + '/root_mysqlpassword length=15') }}"
        priv="*.*:ALL,GRANT"
    with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - 'localhost'

  - name: Snorby - Create /root/.my.cnf
    template: 
        src: templates/my.cnf.j2
        dest: ~/.my.cnf
        owner: root
        group: root
        mode: 0644

  - name: Snorby - Create Snorby user
    mysql_user:
        name=snorby 
        host=localhost
        password=snorby
        priv="snorby.*:ALL"
        state=present

  - name: Snorby - Create Snort user
    mysql_user:
        name=snort 
        host="{{pfsense_ip}}"
        password="{{pfsense_password}}"
        priv="snorby.*:ALL"
        state=present

#  - name: "Snorby - Set MySQL snorby user"
#    mysql_user: name= root
#                password="{{ lookup('password', 'mysqlpassword length=15') }}"
#                priv=*.*:ALL

#  - name: Snorby - Add Ruby 2.2 to Bash
#    copy: 
#        src: /etc/ansible/rh-ruby22.sh
#        dest: /etc/profile.d/rh-ruby22.sh

  - name: Snorby - Install bundler
    command: "gem install bundler"

  - name: Snorby - Install rails
    command: "gem install rails --version=3.2.22"

  - name: Snorby - Install rake
    command: "gem install rake"

  - name: Snorby - Get Snorby from GitHub
    git:
        repo: git://github.com/Snorby/snorby.git
        clone: yes
        dest: /opt/snorby
        update: no

  - name: Snorby - Checking if Snorby has already been setup
    stat:
        path: /opt/snorby/.setup_complete
    register: snorby_setup_check

  - name: Snorby - Capturing wkhtmltopdf path
    command: "which wkhtmltopdf"
    register: wkhtmltopdf_path

  - name: Snorby - Configuring Snorby YAML
    template:
        src: templates/snorby_config.yml.j2
        dest: /opt/snorby/config/snorby_config.yml
        owner: root
        group: root
        mode: 0644

  - name: Snorby - Copy Gemfile with postgre commented out
    template:
        src: templates/Gemfile.j2
        dest: /opt/snorby/Gemfile
        owner: root
        group: root
        mode: 0644
    when: not snorby_setup_check.stat.exists

  - name: Snorby - Update bundler
    bundler:
        state: latest
        chdir: /opt/snorby/

  - name: Snorby - Configuring Snorby DB YAML (Initial Setup)
    template:
        src: templates/database.yml.j2
        dest: /opt/snorby/config/database.yml
        owner: root
        group: root
        mode: 0644
    when: not snorby_setup_check.stat.exists

  - name: Snorby - Moving Ruby templates (application.rb)
    template:
        src: templates/application.rb.j2
        dest: /opt/snorby/config/application.rb
        owner: root
        group: root
        mode: 0644
    when: not snorby_setup_check.stat.exists

  - name: Snorby - Moving Ruby templates (mail_config.rb)
    template:
        src: templates/mail_config.rb.j2
        dest: /opt/snorby/config/initializers/mail_config.rb
        owner: root
        group: root
        mode: 0644
    when: not snorby_setup_check.stat.exists

  - name: Snorby - Moving Ruby templates (report_mail.rb)
    template:
        src: templates/report_mail.rb.j2
        dest: /opt/snorby/app/mailers/report_mail.rb
        owner: root
        group: root
        mode: 0644
    when: not snorby_setup_check.stat.exists

  - name: Snorby - Building Snorby
    bundler:
        state: present
        chdir: /opt/snorby

  - name: Snorby - Setting up Snorby
    command: "rake snorby:setup"
    args:
        chdir: /opt/snorby/
    register: snorby_setup
    when: not snorby_setup_check.stat.exists

  - name: Snorby - Marking Snorby as set up
    file:
        path: /opt/snorby/.setup_complete"
        state: touch
    when: snorby_setup.changed

  - name: Snorby - Create /etc/snorby
    file: 
        path: /etc/snorby 
        state: directory

  - name: Snorby - Copy Snorby service to init.d
    template:
        src: templates/snorby-stop.j2
        dest: /etc/snorby/snorby-stop
        owner: root
        group: root
        mode: 0755

  - name: Snorby - Copy Snorby service to init.d
    template:
        src: templates/snorby-start.j2
        dest: /etc/snorby/snorby-start
        owner: root
        group: root
        mode: 0755

  - name: Snorby - Copy Snorby service to init.d
    template:
        src: templates/snorby.service.j2
        dest: /usr/lib/systemd/system/snorby.service
        owner: root
        group: root
        mode: 0755

  - name: Snorby - SystemD reload
    systemd:
        daemon-reload: yes
        name: snorby
        enabled: yes
        state: started  

