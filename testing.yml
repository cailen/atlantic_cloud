---
- hosts: localhost
  vars:
    - cu_id: 77555
    - datacenters:
        USEAST1: orl
        USEAST2: nyc
        USCENTRAL1: dal
        USWEST1: sfo
        CAEAST1: tor
        EUWEST1: lon
    - datacenter: EUWEST1
    - firewall: yes
    - public_key: ATL8f59337f60fb45e4ff600c38e62ab540
    - private_key: 66f002a2b6c5d742a9ce6d6e4de333534c73b128
    - ssh_key: "ansible"
    - builds:
        - host:
            imageid: ubuntu-16.04_64bit
            planname: "G2.2GB"  
            servername: "{{cu_id}}-{{datacenters[datacenter]}}-ubuntu"
        - ids:
            imageid: CentOS-7.3_64bit
            planname: "G2.2GB"
            servername: "{{cu_id}}-{{datacenters[datacenter]}}-centos"

  roles:
    - atlantic-cloud
  # tasks:
  #   - name: Atlantic_Net Cloud - Create new server
  #     atlantic_cloud:
  #        state: present
  #        public_key: ATL8f59337f60fb45e4ff600c38e62ab540
  #        private_key: 66f002a2b6c5d742a9ce6d6e4de333534c73b128
  #        servername: "{{cu_id}}-{{datacenters[datacenter]}}-ubuntu"
  #        vm_location: "{{datacenter}}"
  #        imageid: ubuntu-16.04_64bit
  #        planname: "G2.2GB"
  #        ssh_key: "ansible"
  #     register: derek_host

  #   - name: Atlantic_Net Cloud - Create new server
  #     atlantic_cloud:
  #        state: present
  #        public_key: ATL8f59337f60fb45e4ff600c38e62ab540
  #        private_key: 66f002a2b6c5d742a9ce6d6e4de333534c73b128
  #        servername: "{{cu_id}}-{{datacenters[datacenter]}}-centos"
  #        vm_location: "{{datacenter}}"
  #        imageid: CentOS-7.3_64bit
  #        planname: "G2.2GB"
  #        ssh_key: "ansible"
  #     register: derek_host2

  #   - name: Adding the new hosts to the host file
  #     add_host:
  #       name: "{{ item.name.results.ip_address }}"
  #       ansible_python_interpreter: /usr/bin/python3
  #       groups: "{{ item.groups }}"
  #     with_items:
  #       - { name: "{{derek_host}}", groups: 'derek-host'}

  #   - name: Sending info to file
  #     template: src=templates/new_derek_host.j2 dest=/etc/ansible/new_derekserver_{{derek_host.results.cu_id}}_{{derek_host.results.instanceid}} owner=root group=root mode=644

  #   - name: Waiting for servers to come online...
  #     local_action:
  #       module: wait_for
  #         host={{ derek_host.results.ip_address }}
  #         port=22
  #         delay=20
  #         timeout=300

  #   - name: Adding the new hosts to the host file
  #     add_host:
  #       name: "{{ item.name.results.ip_address }}"
  #       groups: "{{ item.groups }}"
  #     with_items:
  #       - { name: "{{derek_host2}}", groups: 'derek-host'}

  #   - name: Sending info to file
  #     template: src=templates/new_derek_host.j2 dest=/etc/ansible/new_derekserver_{{derek_host2.results.cu_id}}_{{derek_host2.results.instanceid}} owner=root group=root mode=644

  #   - name: Waiting for servers to come online...
  #     local_action:
  #       module: wait_for
  #         host={{ derek_host2.results.ip_address }}
  #         port=22
  #         delay=20
  #         timeout=300

- hosts: derek-host
  vars:
  pre_tasks:
    - name: Install aptitude (Debian and Ubuntu)
      apt:
        name: aptitude
        state: latest
      when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
    
    - name: Update VMs (Debian and Ubuntu)
      apt:
        update_cache: yes
        upgrade: yes
        state: latest
      when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
    
    - name: Update VMs (Centos)
      yum:
        update_cache: yes
        name: '*'
        state: latest
      when: ansible_os_family == "RedHat"
  
  roles:
    - atlantic.iptables
    - atlantic.snmp

#     - name: R1SOFT || Add r1soft repo
#       raw: echo deb http://repo.r1soft.com/apt stable main >> /etc/apt/sources.list
#     - name: R1SOFT || Get r1soft key
#       raw: wget http://repo.r1soft.com/r1soft.asc
#     - name: R1SOFT || Add r1soft key
#       raw: apt-key add /root/r1soft.asc
#     - name: R1SOFT || Install r1soft agent
#       apt:
#         name: r1soft-cdp-enterprise-agent
#         update_cache: yes
#         state: latest
# #    - name: Get the r1soft key from server
# #      raw: r1soft-setup --get-key https://cdp.dal-tx.atlantic.net
#     - name: R1SOFT || Enable and restart cdp-agent
#       systemd:
#         name: cdp-agent
#         enabled: yes
#         state: restarted    
#     - name: TRENDMICRO || Install TrendMicro (part 1)
#       command: wget https://209.208.116.206:4119/software/agent/Ubuntu_16.04/x86_64/ -O /tmp/agent.deb --no-check-certificate --quiet
#     - name: TRENDMICRO || Install TrendMicro (part 2)
#       command: dpkg -i /tmp/agent.deb
